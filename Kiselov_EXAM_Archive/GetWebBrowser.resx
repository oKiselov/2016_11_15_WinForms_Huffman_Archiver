<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>