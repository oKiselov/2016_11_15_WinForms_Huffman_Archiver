<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAASdSURBVHhe7dtpqG1jHMfxZZ5nRRmTt96ITGV4gYiEJFOmF8o8ZChEkXhlVggpQ0JKMhVJplBm
        KUMZQuYhMvP97rbTvvv+1zp77/X81977dn/16Zy79nrWev77nn3WWs/znCo5q2FnnIzr8Rjewhf4FX/1
        +b3bfM193Nc2tvUYc5VtcA6egoX925LH8Fge02PPZNbACXgB/yAqpASP7Tk8l+ecetbFxfgKUYczeU7P
        bR86z8o4Dd8g6lyX7IN9sU+dZHu8hqgz02Sf7FtaVsAF+B1RB2aBfbOP9rVo1sHDiE46i+yrfS6STfE6
        ohPNMvts31tlM7yP6ARteUl7EmfCy9rVKP1L1b5bw0TZCO8hOnBb32NvDGd9PISozaSswVrGyqp4DtEB
        SzgSdfHW9wNE7SZlLdY0cm5CdKASvsNKaMpFiNq2YU0j5WBk3s6+icVyNKK2bViTtTVmA/hUFh2glK+x
        IpritTxq25a1WWNtrkPUsLSDUBdvad9B1K4Eawzjo+YfiBqV9iV2wHBWxx2I2pRijeFj9S2IGmT5E/fi
        GPgT4S++jxHtW5q1LhGvkyUGL+aFtS5xb3A6oh2XZda8kOcR7bQss+ZeNsbfiHYqyeuw9+aP4kE8i58Q
        7dsFa7b26tD+hgy/4X4cjg0xnFXgax8hap/N2qurBjaU9AhGfQjxzZnGm2DtvY5GL7bl5W27/lcffjZB
        U45HdJxM1l69O7ChpE+G/v0qmoaqtsbg/l2w9k5HdndEXRzCitpksvZOBzn3RV3WRtQmk7X35uaiFzNs
        hbpsjqhNJmvv7BbYoamm7IWoXaZfUH02sCHTYiMyFyJql8naq1cGNmQ6BE15BlG7TC+jumdgQxYffR3x
        rctamMaM092ozh/YkOUlNGV/RO2ynYtqj4ENWS5DU5wUidpl2w298fKf+xuy7I6mvI2oXaYf4MNYL/ch
        2qkE39yFEwXZEpnD8HV6n///cyCinUpwSUtTjkPULtt+WIgzNVkDknehKV0NxQ/6EEvNTZyBaOe2bkNT
        HkfULtOpWCqOyX+KqEEbDn03xTWBw20yn0/8Sa9de3gUokZtONLTNA7gU+BJuAGO0HjFyLwqHIHGPIGo
        YRunYNR4bY6OUYK1LZotUHqQxNtcl7LVzdF7m3winkbWCPW3sLaR4q1pxufQxY0+e1yC83ANXLzg6HG0
        fym+qQdgrJyN6GDzyOn2iXIlogPOE3/KWuUKRAeeB7VrAcZN1oqNLH7mnW4vFtfxRSeaRT+iN+VVMk5k
        RiebNS9iWxTNnpjG4+o4nGU+C4stvxs7Ph9MY7BiVN5g3YzWa4Lr0vW6oVH5P34tnE9MS8ZqzTa8M/WP
        p7xl9gEqNZej1Ofe38qT3FbbxvWCt8Lp9bEXPE8Sn5PvRNShcble/1j4ALQm/HMWL08uj/cNdhzAj5j8
        3m2+dhjc17mCTuO6esfvo2JG5Tyjb+AumKvshM8RFbUY77p8jPWzuR7mLrvCWdKouDpefvxrD8fWnNae
        6zyAqMhB/kJ6AzfCz/FU/lgxK05a7AOnp53Cvr3/9VL4DODnOf2yszzLM41U1X+wiKsWke0Y3QAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>