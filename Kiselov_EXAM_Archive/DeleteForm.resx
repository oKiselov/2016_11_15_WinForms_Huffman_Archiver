<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAR5SURBVHhe7Zot0xRHFIXfqogIRAQiAoGIiIyIiEAgEAhkBAIREYGIiMgPQCIQCEREJIIfgEAg
        EBGICEREREREBCIiAoFAhPuIU3Xr1rk9+9GzVJZ5qk7VuzOzM33OdPed6X0vNjY2NjY2NjY2NjY2Ep+H
        fg69OBPhBU8781vovzMTnnbiSsid4ByEt0WuhtyXz0F4W2QLIOS+fA7aAggt8tEHcCn0NuRO8H8WnvC2
        E3dC5xQCXvC0F5+FbobcCW+FbofepG2/hu6G3qVtj0LXizhO+/n+vsd/H3qdtv0RuhHq2sp2vBzMP6F6
        0q9DcC2UQ8i95mHIQTfMpvY9PgeGeT3ifhXSdom2Hw3P0vXE34VEDQF1ZgQB5uP/DY2e1V1o2TzQprwf
        0fajoVvWEz8IiS9DuUuiUQDueFQNZXYJgDbl/Yi2H80PoXripyGoZnL3dCHU42lgNuZC2HUI0CZtl2j7
        0TAR1RP/FapmMFyHQw7BHQ/VYDbl9n1htnE8bdI2ibYfzeVQPTFyZsCF0JkX+xgFd7z+zqLtU3CVQKpm
        YEZ16Lq6qMdXTakAwlUC1JmBQ6qDM+XMi1EIUyqAcJVAE2FH7fZodgDAd/4M5e+gKRVAuErA3eUuO6r5
        peoA1fzSEBA/hnRc1pQKIFwlQC6EfasDVPMYHk2CojOPplQA0VUClEMYzfZdCM68jI72jcyjaRVAjCoB
        xngUHZU6qCEc8iDEMffSZ6epFUC4SvDSbEPOvKghSM68qCFIzBPuCXBqBRCuEvD8fb9sexJaor66Lr0M
        ASHU2Z7X79XeASquErwK1VKX5wRHdzdHvQbcmKfXuF44tQKIrhJIeYh0IVTz3NE8HLoQsnm6/e/ps9PU
        CiBGlUANzw2tIbjJjG5f54QaQjX/bajrRdL0CiBcJajjzYXQmRddCM686EJYpQIIVwny6pCoIeQfW7vZ
        voaQr1XNi9VWgTq6SuDIIUijUgc1BNSZh5NVAOEqQfdSRBetZaszkqkhj166VlsF6nCVgJWYSjc+NSd0
        uF6Duuqw2ipQB+vr9YIIw8JNePnRtQuhTnh8Jw+HGgLX0b6s1SqAqA8+6JsQOPMa83VizCFU8xoqdU7I
        IbjeuGoFEM9C9cIY3ff1VSF05oULwS22INq2OjSgXhjReP09mu2z4bxWOJrtawjd75bdXDEVXkDcxaWR
        eZFDQCPzoobgRNtWh/HuLi4dEoCGw4iu22dpLlqVrhIcMgTyd0YhjNYYs476FXgf3J3gJ/N9JkF1+7zN
        heCW2fhpXp8ljjkZrhLwXL5rGaxjvguhW2N07wAnqQDCVQL+HRWWHoSqeVFDGK0xci1td/tXx90BHkI+
        DUENQerMixxCVjb3SejvUD2GNp0MurWbiLjTghDcGt4SS2uMP4Xyfmmnf4OdiXsTIxRCwLy7m0sl0pU6
        zQmcE/Mu+Oehk7P0PHBKrfoGOMJNRqfWLsvwq8Gk5ya7U4lrMzQ+KDTgl5Br4Jrizn9w8xkmqscht3I8
        S5yba0wa8xcX7wHiJVr1bIDCaAAAAABJRU5ErkJggg==
</value>
  </data>
</root>